{"version":3,"sources":["image/logo.svg","image/error.png","components/Header.js","services/instaServices.js","components/Error.js","components/Posts.js","components/User.js","components/Users.js","components/Feed.js","components/Palette.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","exact","activeClassName","Component","instaServices","getResource","url","a","fetch","_apiBase","res","ok","Error","status","json","getAllPosts","getAllUsers","map","_transformPosts","post","photo","name","altname","_id","getAllMyPhotos","this","ErrorMessage","img","Posts","InstaService","state","posts","error","onPostsLoaded","setState","onError","err","updatePosts","then","catch","arr","item","descr","key","href","items","renderItems","User","props","min","Users","users","onUsersLoaded","updateUsers","Feed","Palette","photos","onPhotosLoaded","updatePhotos","Profile","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0bf0c8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9e8a2b39.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.3b8ad90a.png\";","import React, {Component} from 'react';\r\nimport logo from '../image/logo.svg';\r\nimport {NavLink, Link} from 'react-router-dom';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"h-flex\">\r\n                    <Link to='/' className=\"logo\">\r\n                        <img src={logo} alt=\"logo\"></img>\r\n                    </Link>\r\n                    <nav className=\"links\">\r\n                        <ul>\r\n                            <li>\r\n                                <NavLink exact to=\"/\" className=\"menu__links\" activeClassName=\"active\">Лента</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to=\"profile\" className=\"menu__links\" activeClassName=\"active\">Профиль</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}","export default class instaServices {\r\n    constructor() {\r\n        this._apiBase = 'https://aqueous-forest-33289.herokuapp.com'\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}: received ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllPosts = async () => {\r\n        const res = await this.getResource('/posts/');\r\n        return res;\r\n    }\r\n\r\n    getAllUsers = async () => {\r\n        const res = await this.getResource('/posts/');\r\n        return res.map(this._transformPosts);\r\n    }\r\n\r\n    _transformPosts = (post) => {\r\n        return {\r\n            photo: post.photo,\r\n            name: post.name,\r\n            alt: post.altname,\r\n            _id: post._id\r\n        }\r\n    }\r\n\r\n    getAllMyPhotos = async () => {\r\n        const res = await this.getResource('/my-posts/');\r\n        return res;\r\n    }\r\n}","import React from 'react';\r\nimport img from '../image/error.png'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} alt=\"error\"></img>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import React, {Component} from 'react';\r\nimport InstaService from '../services/instaServices';\r\nimport ErrorMessage from './Error';\r\n\r\nexport default class Posts extends Component {\r\n    InstaService = new InstaService();\r\n    state = {\r\n        posts: [],\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePosts();\r\n    }\r\n\r\n    updatePosts() {\r\n        this.InstaService.getAllPosts()\r\n        .then(this.onPostsLoaded)\r\n        .catch(this.onError);\r\n    }\r\n\r\n    onPostsLoaded = (posts) => {\r\n        this.setState({\r\n            posts,\r\n            error: false\r\n        })\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    renderItems(arr) {\r\n        return arr.map(item => {\r\n            const {name, altname, photo, src, alt, descr, _id} = item;\r\n\r\n            return (\r\n                <div key={_id} className=\"post\">\r\n                    <a href=\"#\" className=\"post__user\">\r\n                        <img src={photo} alt={altname} className=\"user__img\"></img>\r\n                        <div className=\"user__name\">{name}</div>\r\n                    </a>\r\n                    <img src={src} alt={alt} className=\"post__img\"></img>\r\n                    <div className=\"post__name\">\r\n                            {name}\r\n                    </div>\r\n                    <div className=\"post__descr\">\r\n                            {descr}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n        const {error, posts} = this.state;\r\n\r\n        if (error) {\r\n            return <ErrorMessage />\r\n        }\r\n        \r\n        const items = this.renderItems(posts);\r\n\r\n        return (\r\n           <div className=\"left\">\r\n               {items}\r\n           </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst User = (props) => {\r\n    const {min, src, alt, name} = props;\r\n\r\n    return (\r\n        <a href=\"#\" className={min ? \"user min\" : \"user\"}>\r\n            <img src={src} alt={alt} className=\"user__img\"></img>\r\n            <div className=\"user__name\">{name}</div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default User;","import React, {Component} from 'react';\r\nimport InstaService from '../services/instaServices';\r\nimport ErrorMessage from './Error';\r\nimport User from './User';\r\n\r\nexport default class Users extends Component {\r\n    InstaService = new InstaService();\r\n    state = {\r\n        error: false,\r\n        users: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateUsers();\r\n    }\r\n\r\n    updateUsers() {\r\n        this.InstaService.getAllUsers()\r\n        .then(this.onUsersLoaded)\r\n        .catch(this.onError);\r\n    }\r\n\r\n    onUsersLoaded = (users) => {\r\n        this.setState({\r\n            users,\r\n            error: false\r\n        })\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    renderItems(arr) {\r\n        return arr.map(item => {\r\n            const {photo, name, altname, _id} = item;\r\n\r\n            return (\r\n                <User key={_id} src={photo}  \r\n                name={name}\r\n                alt={altname}\r\n                min/>\r\n            )\r\n        })\r\n    }\r\n    \r\n    render () {\r\n        const {error, users} = this.state;\r\n\r\n        if (error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        const items = this.renderItems(users);\r\n        return (\r\n            <div className=\"right\">\r\n                <User src=\"https://www.zastavki.com/pictures/originals/2019Men___Male_Celebrity_Smiling_man__actor_Hugh_Jackman_in_a_suit_on_a_gray_background_135378_.jpg\" \r\n                    alt=\"man\" \r\n                    name=\"Hugh\"/>\r\n                <div className=\"users__block\">\r\n                    {items}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Posts from './Posts';\r\nimport Users from './Users';\r\n\r\nexport default function Feed() {\r\n    return (\r\n        <div className=\"feed\">\r\n            <Posts />\r\n            <Users />\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport InstaService from '../services/instaServices';\r\nimport ErrorMessage from './Error';\r\n\r\nexport default class Palette extends Component {\r\n    InstaService = new InstaService();\r\n    state = {\r\n        error: false,\r\n        photos: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePhotos();\r\n    }\r\n\r\n    updatePhotos() {\r\n        this.InstaService.getAllMyPhotos()\r\n        .then(this.onPhotosLoaded)\r\n        .catch(this.onError);\r\n    }\r\n\r\n    onPhotosLoaded = (photos) => {\r\n        this.setState({\r\n            photos,\r\n            error: false\r\n        })\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    renderItems(arr) {\r\n        return arr.map(item => {\r\n            const {src, alt, _id} = item;\r\n\r\n            return (\r\n               <img key={_id} src={src} alt={alt} className=\"palette__img\"></img>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {error, photos} = this.state;\r\n\r\n        if (error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        const items = this.renderItems(photos);\r\n\r\n        return (\r\n           <div className=\"palette\">\r\n               {items}\r\n           </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport User from './User';\r\nimport Palette from './Palette';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className=\"profile\">\r\n            <User src=\"https://www.zastavki.com/pictures/originals/2019Men___Male_Celebrity_Smiling_man__actor_Hugh_Jackman_in_a_suit_on_a_gray_background_135378_.jpg\" \r\n                alt=\"man\" \r\n                name=\"Hugh\"/>\r\n            <Palette />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport Header from './components/Header';\nimport Feed from './components/Feed';\nimport Profile from './components/Profile';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Route exact path='/' component={Feed} />\n        <Route exact path='/profile' component={Profile} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}